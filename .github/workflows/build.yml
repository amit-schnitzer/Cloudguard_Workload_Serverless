name: 'CI/CD'
on:
  push:
    branches:
    - master
    paths:
    - '_build_flag'

jobs:
  build: 
    runs-on: ubuntu-latest
    env:
      working-directory: .
      CG_TOKEN: ${{ secrets.CG_TOKEN }}
    
    steps:
#Setup Environment
    - name: "Setup Node.js"
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
    - name: Setup python
      uses: actions/setup-python@v2
      with:
          python-version: '3.7' 
          architecture: 'x64'

#Checkout code from repository
    - name: Checkout Code
      uses: actions/checkout@v1 

#Install Dependencies      
    - name: Install Relevant Plugins + Dependencies
      run: |
          npm install -g serverless 
          npm install -D https://artifactory.app.protego.io/cloudguard-serverless-plugin.tgz
          

#Configure AWS CLI
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  


# Insert Secrets into serverless.yml
    - name: Insert Secrets
      run: |
          sed -i "/Endpoint/c\             Endpoint\ : \"${{ secrets.EMAIL }}\"" serverless.yml
          

#Deploy function to AWS       
    - name: Intial Deploy to AWS without FSP
      run: |
        pip install awscli 
        sls deploy -t ${CG_TOKEN} 
      timeout-minutes: 30
      
      
#Enable FSP      
  #  - name: Enable FSP
   #   run: |
    #    sleep 10
     #   aws_arn=$(aws lambda get-function --function-name CPWorkloadTask-dev-CPWorkloadTask | jq .Configuration | jq .FunctionArn)
      #  aws_arn=$(sed -e 's/^"//' -e 's/"$//' <<<"$aws_arn")
       # lambda_id=$(curl https://api.dome9.com/v2/CloudLambdaFunction?arn=$aws_arn --basic -u ${CG_TOKEN}  | jq .id)
        #lambda_id=$(sed -e 's/^"//' -e 's/"$//' <<<"$lambda_id")

        #curl -X PATCH https://api.dome9.com/v2/serverless/functions/$lambda_id/fsp --basic -u ${CG_TOKEN}  -H 'Accept: application/json' --data "{\"enable\": true}"
        #curl -X PATCH https://api.dome9.com/v2/serverless/functions/$lambda_id/fspMode --basic -u ${CG_TOKEN}  -H 'Accept: application/json' --data "{\"fspMode\" : \"Block\"}"
   
#Upload artifacts   
    - name: Upload yml output
      uses: actions/upload-artifact@v2
      with:
       name: cloudguard_output.yml
       path: ./cloudguard_output/CloudGuardScanResults.yaml
   
    - name: Upload html output
      uses: actions/upload-artifact@v2
      with:
       name: cloudguard_output.html
       path: ./cloudguard_output/CloudGuardScanReport.html

